csiDriver:
  # should be globally unique for a given cluster
  name: "org.democratic-csi.nfs"
  fsGroupPolicy: File

# add note here about volume expansion requirements
storageClasses:
  - name: freenas-nfs-csi
    defaultClass: false
    reclaimPolicy: Delete
    volumeBindingMode: Immediate
    allowVolumeExpansion: true
    parameters:
      # for block-based storage can be ext3, ext4, xfs
      # for nfs should be nfs
      fsType: nfs

      # if true, volumes created from other snapshots will be
      # zfs send/received instead of zfs cloned
      # detachedVolumesFromSnapshots: "false"

      # if true, volumes created from other volumes will be
      # zfs send/received instead of zfs cloned
      # detachedVolumesFromVolumes: "false"

    mountOptions:
      - noatime
      - nfsvers=3

    # existingSecrets will look for an existing secret with name/namespace and use the values within for authentication
    # the existing secret should contain something similar to with proper references for your secret:
    #   target:
    #     name: existingSecretName
    #     template:
    #       engineVersion: v2
    #       data:
    #          node-db.node.session.auth.authmethod: "CHAP"
    #          node-db.node.session.auth.username: "{{ .iscsi_username }}"
    #          node-db.node.session.auth.password: "{{ .iscsi_password }}"
    #          node-db.node.session.auth.username_in: "{{ .iscsi_username_in }}"
    #          node-db.node.session.auth.password_in: "{{ .iscsi_password_in }}"
    existingSecret:
      nfs-chap-secret:
        name: existingSecretName
        namespace: existingSecretNameSpace

    # you can use EITHER an existingSecret or inline secrets below--not both.
    # secrets:
    #   provisioner-secret:
    #   controller-publish-secret:
    #   node-stage-secret:
    #   node-publish-secret:
    #   controller-expand-secret:

# if your cluster supports snapshots you may enable below
volumeSnapshotClasses: []
#- name: freenas-nfs-csi
#  parameters:
#  # if true, snapshots will be created with zfs send/receive
#  # detachedSnapshots: "false"
#  secrets:
#    snapshotter-secret:

driver:
  config:
    # please see the most up-to-date example of the corresponding config here:
    # https://github.com/democratic-csi/democratic-csi/tree/master/examples
    # YOU MUST COPY THE DATA HERE INLINE!
    driver: freenas-nfs
    #...
